SELECT  CASE WHEN SURVEY_SERIES_ALT_DESC IS NULL THEN SURVEY_SERIES_TYPE_ALT_DESC 
	WHEN SURVEY_SERIES_TYPE_ALT_DESC IS NULL THEN SURVEY_SERIES_ALT_DESC 
	WHEN SURVEY_SERIES_TYPE_ALT_DESC = 'OTHER' THEN SURVEY_SERIES_ALT_DESC
	ELSE (SURVEY_SERIES_TYPE_ALT_DESC + ' ' + SURVEY_SERIES_ALT_DESC) 
	END AS SURVEY_ABBREV,
  COALESCE(MIN_BOTTOM_DEPTH, MAX_BOTTOM_DEPTH) AS DEPTH,
  SM.SPECIES_CODE,
  SPP.SPECIES_COMMON_NAME,
  SPP.SPECIES_SCIENCE_NAME,
  SM.GROUPING_CODE
FROM GFBioSQL.dbo.SURVEY S
  INNER JOIN TRIP_SURVEY TS ON S.SURVEY_ID = TS.SURVEY_ID
  INNER JOIN GFBioSQL.dbo.SURVEY_GROUPING SG ON S.SURVEY_ID = SG.SURVEY_ID
  INNER JOIN GFBioSQL.dbo.B21_Samples SM ON TS.TRIP_ID = SM.TRIP_ID
  INNER JOIN GFBioSQL.dbo.FISHING_EVENT_GROUPING FEG ON SG.GROUPING_CODE = FEG.GROUPING_CODE AND SM.FISHING_EVENT_ID = FEG.FISHING_EVENT_ID
INNER JOIN GFBioSQL.dbo.SPECIES SPP ON SPP.SPECIES_CODE = SM.SPECIES_CODE
LEFT JOIN GFBioSQL.dbo.TRAWL_SPECS TRSP ON TRSP.FISHING_EVENT_ID = SM.FISHING_EVENT_ID
  LEFT JOIN GFBioSQL.dbo.TRAP_SPECS TPSP ON TPSP.FISHING_EVENT_ID = SM.FISHING_EVENT_ID
  LEFT JOIN GFBioSQL.dbo.LONGLINE_SPECS LLSP ON LLSP.FISHING_EVENT_ID = SM.FISHING_EVENT_ID
  LEFT JOIN GFBioSQL.dbo.HANDLINE_SPECS HLSP ON HLSP.FISHING_EVENT_ID = SM.FISHING_EVENT_ID
  INNER JOIN GFBioSQL.dbo.SURVEY_SERIES SS ON SS.SURVEY_SERIES_ID = S.SURVEY_SERIES_ID
  INNER JOIN GFBioSQL.dbo.SURVEY_SERIES_TYPE SST ON SST.SURVEY_SERIES_TYPE_CODE = SS.SURVEY_SERIES_TYPE_CODE
WHERE FE_PARENT_EVENT_ID IS NULL AND TRIP_SUB_TYPE_CODE IN (2, 3) AND
  S.ORIGINAL_IND = 'Y' AND
  S.SURVEY_SERIES_ID <> 0
-- insert species here
-- insert ssid here
ORDER BY SURVEY_ABBREV
